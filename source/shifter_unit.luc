module shifter_unit (
  //input a,b are 16 bits, and only the last 4 bits of b is used
  //output is 16 bit, representing shifted a
  //alufn is 6 bit, encoding the operation
    input a[16],
    input b[16],
    input alufn[6],
    output out[16]
  ) {
  
  // Slice 4 bits of b (b[3:0]) to shift a by maximum of 2^4 bits
  // alufn must consider all 6 bits as shift operation
  
  always {
  case (alufn) {
    b100000: out = a << b[3:0];           // Shift left
    b100001: out = a >> b[3:0];           // Shift right
    b100011: out = $signed(a) >>> b[3:0]; // Signed shift right
    default: out = a;
    }
  }
}